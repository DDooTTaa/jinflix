{"version":3,"sources":["assets/noPosterSmall.jpg","Components/GlobalStyles.js","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/App.js","index.js"],"names":["globalStyles","createGlobalStyle","reset","api","axios","create","baseURL","params","api_key","laungage","get","moviesApi","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","upComing","popular","error","loading","Loader","Helmet","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","console","log","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","searchPresenter","movieResults","tvResults","searchTerm","handlesubmit","updateTerm","onSubmit","placeholder","type","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","SearchPresenter","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Content","Cover","bgImage","Backdrop","Data","h3","ItemContainer","Divider","Overview","p","DefaultPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parseId","parseInt","isNaN","request","DetailPresenter","path","exact","component","Home","TV","render","Search","Detail","from","App","Router","GlobalStyles","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a8e50367.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.11c0d9e2.jpg\";","\r\nimport { create, createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Baloo+Tamma+2:wght@400;600;700&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100&display=swap');\r\n\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    * {\r\n        box-sizing:border-box;\r\n    }\r\n    body {\r\n        font-family: 'Baloo Tamma 2', 'Nanum Pen Script',  'Noto Sans KR', cursive;\r\n        font-size: 12px;\r\n        background-color:rgba(20,20,20,1);\r\n        color: white;\r\n        padding-top: 50px;\r\n        transform: skew(-0.1deg);\r\n    }\r\n\r\n    p, a, h1, h2, h3, h4, h5, h6, span{\r\n        transform: skew(-0.1deg);\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key: \"10923b261ba94d897ac6b81148314a3f\",\r\n        laungage: \"en-US\"\r\n    }\r\n})\r\n\r\napi.get(\"tv/popular\");\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upComing: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: (id) =>\r\n        api.get(`movie/${id}`, {\r\n            params: {\r\n                append_to_response: \"videos\"\r\n            }\r\n        }),\r\n    search: (term) => api.get(\"search/movie\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n}\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    showDetail: (id) =>\r\n        api.get(`tv/${id}`, {\r\n            params: {\r\n                append_to_response: \"videos\"\r\n            }\r\n        }),\r\n    search: (term) => api.get(\"search/tv\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child){\r\nmargin-bottom: 50px;\r\n    }`;\r\n\r\nconst Title = styled.span`\r\nfont-size: 18px;\r\nfont-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\nmargin-top: 25px;\r\ndisplay: grid;\r\ngrid-template-columns:repeat(auto-fill, 125px);\r\ngrid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n};\r\n\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 52px;\r\n    padding-top: 100px;\r\n    `;\r\n\r\n\r\nexport default () => <Container><span role=\"img\" aria-label=\"Loading\">⏰</span></Container>;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\nwidth: 100vw;\r\ndisplay: flex;\r\njustify-content: center;\r\npadding-top: 50px;\r\n`;\r\n\r\nconst Text = styled.span`\r\ncolor: ${props => props.color};\r\nfont-weight: 600;\r\nfont-size: 24px;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n    <Container>\r\n        <Text color={color}>{text}\r\n        </Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\nfont-size: 12px;`;\r\n\r\n\r\nconst Image = styled.div`\r\nbackground-image: url(${props => props.bgUrl});\r\nheight: 180px;\r\nbackground-size: cover;\r\nborder-radius: 4px;\r\nbackgtound-position: center center;\r\ntransition: opacity 0.2s linear;\r\n`;\r\n\r\n\r\nconst Rating = styled.span`\r\nposition: absolute;\r\nbottom: 6px;\r\nright: 5px;\r\nopacity: 0;\r\ntransition: opacity 0.2s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\nmargin-bottom: 5px;\r\nposition: relative;\r\n        &: hover{\r\n    ${Image} {\r\n        opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n        opacity: 1;\r\n    }\r\n}\r\n`;\r\n\r\nconst Title = styled.span`\r\ndisplay: block;\r\nmargin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\nfont - size: 10px;\r\ncolor: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n    <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/noPosterSmall.jpg\").default} />\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"rating\">⭐\r\n                    </span>{\" \"}\r\n                    {rating}/10\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>{title.length > 20 ? `${title.substring(0, 18)}...` : title}</Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n    </Link>\r\n)\r\n\r\n\r\nPoster.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\npadding: 20px;`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upComing, popular, error, loading }) =>\r\n    loading ? <Loader /> : (\r\n        <Container>\r\n            <Helmet>\r\n                <title>Movies | JinFlix</title>\r\n            </Helmet>\r\n            {nowPlaying && nowPlaying.length > 0 && (\r\n                <Section title=\"Now Playing\">\r\n                    {nowPlaying.map(movie => (\r\n                        <Poster\r\n                            key={movie.id}\r\n                            id={movie.id}\r\n                            imageUrl={movie.poster_path}\r\n                            title={movie.original_title}\r\n                            rating={movie.vote_average}\r\n                            isMovie={true}\r\n                            year={movie.release_date}\r\n                        // year={movie.release_date.substring(0,4)}\r\n                        />\r\n                    ))}\r\n                </Section>)}\r\n            {upComing && upComing.length > 0 && (\r\n                <Section title=\"UpComing Movies\">\r\n                    {upComing.map(movie => (\r\n                        <Poster\r\n                            key={movie.id}\r\n                            id={movie.id}\r\n                            imageUrl={movie.poster_path}\r\n                            title={movie.original_title}\r\n                            rating={movie.vote_average}\r\n                            isMovie={true}\r\n                            year={movie.release_date}\r\n                        // year={movie.release_date.substring(0,4)}\r\n                        />\r\n                    ))}\r\n                </Section>)}\r\n            {popular && popular.length > 0 && (\r\n                <Section title=\"Popular Movies\">\r\n                    {popular.map(movie => (\r\n                        <Poster\r\n                            key={movie.id}\r\n                            id={movie.id}\r\n                            imageUrl={movie.poster_path}\r\n                            title={movie.original_title}\r\n                            rating={movie.vote_average}\r\n                            isMovie={true}\r\n                            year={movie.release_date}\r\n                        // year={movie.release_date.substring(0,4)}\r\n                        />\r\n                    ))}\r\n                </Section>)}\r\n            {error && <Message color=\"#e74c3c\" text={error} />}\r\n        </Container>\r\n    )\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    upComing: PropTypes.array,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default HomePresenter;","import HomeContainer from \"./HomeContainer.js\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport { moviesApi } from \"../../api.js\";\r\nimport HomePresenter from \"./HomePresenter.js\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        upComing: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const nowPlaying = (await moviesApi.nowPlaying()).data.results;\r\n            const { data: { results: upComing } } = await moviesApi.upComing();\r\n            const { data: { results: popular } } = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying,\r\n                upComing,\r\n                popular\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find Movies info.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { nowPlaying, upComing, popular, error, loading } = this.state;\r\n        console.log(this.state);\r\n        return <HomePresenter\r\n            nowPlaying={nowPlaying}\r\n            upComing={upComing}\r\n            popular={popular}\r\n            error={error}\r\n            loading={loading}\r\n        />\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\npadding: 20px;`;\r\n\r\nconst TVPresenter = ({ topRated, airingToday, popular, error, loading }) => loading ? <Loader /> :\r\n    <Container>\r\n        <Helmet>\r\n            <title>TV | JinFlix</title>\r\n        </Helmet>\r\n        {topRated && topRated.length > 0\r\n            && <Section title=\"Top Rated\">\r\n                {topRated.map(show => (\r\n                    <Poster\r\n                        key={show.id}\r\n                        id={show.id}\r\n                        imageUrl={show.poster_path}\r\n                        title={show.original_name}\r\n                        rating={show.vote_average}\r\n                        year={show.first_air_date}\r\n                    // year={movie.release_date.substring(0,4)}\r\n                    />\r\n                ))}\r\n            </Section>\r\n        }\r\n        {popular && popular.length > 0\r\n            && <Section title=\"Popular\">\r\n                {popular.map(show => (\r\n                    <Poster\r\n                        key={show.id}\r\n                        id={show.id}\r\n                        imageUrl={show.poster_path}\r\n                        title={show.original_name}\r\n                        rating={show.vote_average}\r\n                        year={show.first_air_date}\r\n                    // year={movie.release_date.substring(0,4)}\r\n                    />\r\n                ))}\r\n            </Section>\r\n        }\r\n        {airingToday && airingToday.length > 0\r\n            && <Section title=\"Airing Today\">\r\n                {airingToday.map(show => (\r\n                    <Poster\r\n                        key={show.id}\r\n                        id={show.id}\r\n                        imageUrl={show.poster_path}\r\n                        title={show.original_name}\r\n                        rating={show.vote_average}\r\n                        year={show.first_air_date}\r\n                    // year={movie.release_date.substring(0,4)}\r\n                    />\r\n                ))}\r\n            </Section>\r\n        }\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>;\r\n\r\nTVPresenter.propTypes = {\r\n    topRated: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    airingToday: PropTypes.array,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer.js\";\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport { tvApi } from \"../../api\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        airingToday: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n    async componentDidMount() {\r\n        try {\r\n            const { data: { results: topRated } } = await tvApi.topRated();\r\n            const { data: { results: airingToday } } = await tvApi.airingToday();\r\n            const { data: { results: popular } } = await tvApi.popular();\r\n            this.setState({\r\n                topRated,\r\n                airingToday,\r\n                popular\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find Movies info.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { topRated, airingToday, popular, error, loading } = this.state;\r\n        console.log(this.state);\r\n        return <TVPresenter\r\n            topRated={topRated}\r\n            popular={popular}\r\n            airingToday={airingToday}\r\n            error={error}\r\n            loading={loading}\r\n        />\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\npadding: 20px;`;\r\n\r\nconst Form = styled.form`\r\nmargin-bottom: 50px;`;\r\n\r\nconst Input = styled.input`\r\nall: unset;\r\nfont-size: 28px;\r\nwidth:100%;`;\r\n\r\nconst searchPresenter = ({ movieResults, tvResults, searchTerm, error, loading, handlesubmit, updateTerm }) =>\r\n    <Container>\r\n        <Helmet>\r\n            <title>Search | JinFlix</title>\r\n        </Helmet>\r\n        <Form onSubmit={handlesubmit}>\r\n            <Input placeholder=\"Search Movie or TV show...\" type=\"text\" value={searchTerm}\r\n                onChange={updateTerm}>\r\n            </Input>\r\n        </Form>\r\n        {loading ? <Loader /> : <>\r\n            {movieResults && movieResults.length > 0 && (\r\n                <Section title=\"Movie Results\">\r\n                    {movieResults.map(movie => (\r\n                        <Poster\r\n                            key={movie.id}\r\n                            id={movie.id}\r\n                            imageUrl={movie.poster_path}\r\n                            title={movie.original_title}\r\n                            rating={movie.vote_average}\r\n                            isMovie={true}\r\n                            year={movie.release_date}\r\n                        // year={movie.release_date.substring(0,4)}\r\n                        />\r\n                    ))}\r\n                </Section>\r\n            )}\r\n            {tvResults && tvResults.length > 0 && (\r\n                <Section title=\"tv Results\">\r\n                    {tvResults.map(show => (\r\n                        <Poster\r\n                            key={show.id}\r\n                            id={show.id}\r\n                            imageUrl={show.poster_path}\r\n                            title={show.original_name}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date}\r\n                        // year={movie.release_date.substring(0,4)}\r\n                        />\r\n                    ))}\r\n                </Section>\r\n            )}\r\n        </>}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults &&\r\n            movieResults &&\r\n            tvResults.length === 0 &&\r\n            movieResults.length === 0 && (\r\n                <Message text={`Nothing Found for: ${searchTerm}`} color=\"#e74c3c\" />\r\n            )}\r\n    </Container>\r\n\r\nsearchPresenter.propTypes = {\r\n    movieResults: PropTypes.array,\r\n    tvResults: PropTypes.array,\r\n    searchTerm: PropTypes.string,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n    handlesubmit: PropTypes.func.isRequired,\r\n    updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default searchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        error: null,\r\n        loading: false\r\n    };\r\n\r\n    handlesubmit = (event) => {\r\n        event.preventDefault();\r\n        const { searchTerm } = this.state;\r\n        if (searchTerm !== \"\") {\r\n            this.searchByTerm();\r\n        }\r\n    };\r\n\r\n    updateTerm = (event) => {\r\n        const { target: { value } } = event;\r\n        this.setState({\r\n            searchTerm: value\r\n        })\r\n    }\r\n\r\n    searchByTerm = async () => {\r\n        const { searchTerm } = this.state;\r\n        this.setState({ loading: true });\r\n        try {\r\n            const { data: { results: movieResults } } = await moviesApi.search(searchTerm);\r\n            const { data: { results: tvResults } } = await tvApi.search(searchTerm);\r\n            this.setState({ movieResults, tvResults });\r\n        } catch {\r\n            this.setState({ error: \"Can't Search\" });\r\n        } finally {\r\n            this.setState({ loading: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n        console.log(this.state);\r\n        return <SearchPresenter\r\n            movieResults={movieResults}\r\n            tvResults={tvResults}\r\n            searchTerm={searchTerm}\r\n            error={error}\r\n            loading={loading}\r\n            handlesubmit={this.handlesubmit}\r\n            updateTerm={this.updateTerm}\r\n        />\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\ncolor: white;\r\nposition:fixed;\r\ntop: 0px;\r\nleft: 0px;\r\nwidth: 100%;\r\nheight: 50px;\r\ndisplay: flex;\r\nalign-items: center;\r\npadding: 0px 10px;\r\nbackground-color: rgba(20,20,20,0.8); \r\nz-index: 10;\r\nbox-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n    display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\nwidth: 50px;\r\nheight: 50px;\r\ntext-align: center;\r\nborder-bottom: 3px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\r\ntransition: border-bottom 0.5s ease-in-out; \r\n`;\r\n\r\nconst SLink = styled(Link)`\r\nheight: 50px;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\n`;\r\n\r\nconst HeaderC = ({ location: { pathname } }) => (\r\n    <Header>\r\n        <List>\r\n            <Item current={pathname === \"/\"}>\r\n                <SLink\r\n                    to=\"/\">Movies</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/TV\"}>\r\n                <SLink\r\n                    to=\"/TV\">TV</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/search\"}>\r\n                <SLink\r\n                    to=\"/search\">Search</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n);\r\n\r\n\r\nexport default withRouter(HeaderC);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\n\r\nconst Container = styled.div`\r\nheight: calc(100vh);\r\nwidth: 100%;\r\nposition: relative;\r\npadding: 50px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    z-index: 1;\r\n    background-color: rgba(45,45,45,0.3);\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    width: 30%;\r\n    background-image: url(${props => props.bgImage});\r\nbackground-position: center center;\r\nbackground-size: cover;\r\nheight:100%;\r\nborder-radius: 5px;\r\n`;\r\n\r\n\r\nconst Backdrop = styled.div`\r\nposition: absolute;\r\ntop: 0px;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground-image: url(${props => props.bgImage});\r\nbackground-position: center center;\r\nbackground-size: cover;\r\nfilter: blur(5px);\r\nopacitiy: 0.5;\r\nz-index: 0;\r\n`\r\n\r\nconst Data = styled.div`\r\n width: 50%;\r\n margin: 30px 50px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size: 32px;\r\n    margin: 10px 0px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin: 20px 0px;\r\n`;\r\n\r\nconst Item = styled.span`\r\nfont-size: 18px;\r\n`;\r\n\r\nconst Divider = styled.span`\r\nmargin: 0px 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    font-size: 22px;\r\n    font-weight: 700;\r\n    opacity: 0.9;\r\n    line-height: 1.5;\r\n    width: 50%;\r\n`;\r\n\r\nconst DefaultPresenter = ({ result, error, loading }) =>\r\n    loading ? (\r\n        <>\r\n            <Helmet>\r\n                <title>Loading | JinFlix</title>\r\n            </Helmet>\r\n            <Loader />\r\n        </>\r\n    ) : (\r\n        <Container>\r\n            <Helmet>\r\n                <title> {result.original_title ? result.original_title : result.original_name} | JinFlix</title>\r\n            </Helmet>\r\n            <Backdrop\r\n                bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\r\n            <Content>\r\n                <Cover\r\n                    bgImage={result.poster_path ?\r\n                        `https://image.tmdb.org/t/p/original${result.poster_path}` :\r\n                        require(\"../../assets/noPosterSmall.jpg\").default} />\r\n                <Data>\r\n                    <Title>\r\n                        {result.original_title ? result.original_title : result.original_name}\r\n                    </Title>\r\n                    <ItemContainer>\r\n                        <Item>\r\n                            {result.release_date ? result.release_date : result.first_air_date}\r\n                        </Item>\r\n                        <Divider>◾</Divider>\r\n                        <Item>\r\n                            {result.runtime ? result.runtime : result.episode_run_time} min\r\n                        </Item>\r\n                        <Divider>◾</Divider>\r\n                        <Item>\r\n                            {result.genres &&\r\n                                result.genres.map((genre, index) =>\r\n                                    index === result.genres.length - 1\r\n                                        ? `${genre.name} `\r\n                                        : `${genre.name} / `\r\n                                )}\r\n                        </Item>\r\n                    </ItemContainer>\r\n                    <Overview>{result.overview}</Overview>\r\n                </Data>\r\n            </Content>\r\n        </Container>\r\n    );\r\n\r\n\r\nDefaultPresenter.propTypes = {\r\n    result: PropTypes.object,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default DefaultPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api.js\";\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { location: { pathname } } = props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes(\"/movie\")\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { match: {\r\n            params: { id }\r\n        },\r\n            history: { push },\r\n            location: { pathname }\r\n        } = this.props;\r\n        const { isMovie } = this.state;\r\n        const parseId = parseInt(id);\r\n        if (isNaN(parseId)) {\r\n            return push(\"/\");\r\n        }\r\n        let result = null;\r\n        try {\r\n            if (isMovie) {\r\n                const request = await moviesApi.movieDetail(parseId);\r\n                result = request.data;\r\n            } else {\r\n                const request = await tvApi.showDetail(parseId);\r\n                result = request.data;\r\n            }\r\n\r\n        } catch {\r\n            this.setState({ error: \"can't find\" })\r\n        } finally {\r\n            this.setState({ loading: false, result });\r\n        }\r\n    }\r\n    render() {\r\n        const { result, error, loading } = this.state;\r\n        console.log(this.state);\r\n        console.log(result);\r\n        return <    DetailPresenter\r\n            result={result}\r\n            error={error}\r\n            loading={loading}\r\n        />\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"../Routes/Home\";\r\nimport TV from \"../Routes/TV\";\r\nimport Search from \"../Routes/Search\";\r\nimport Header from \"./Header\";\r\nimport Detail from \"../Routes/Detail\"\r\n\r\n// Redirect 가 하는 일 => 명시된 라우트가 아닌 것들을 죄다 홈으로 보낸다 하지만 switch를 안쓰면 한번에 랜더링 된다\r\n// Switch \r\nexport default () => (\r\n    <Router>\r\n        <>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/TV\" exact component={TV} />\r\n                <Route path=\"/TV/popular\" render={() => <h1>Popular</h1>} />\r\n                <Route path=\"/search\" component={Search} />\r\n                <Route path=\"/movie/:id\" component={Detail} />\r\n                <Route path=\"/tv/:id\" component={Detail} />\r\n                <Redirect from=\"*\" to=\"/\" />\r\n\r\n            </Switch>\r\n        </>\r\n    </Router>\r\n);","import React, { Component } from \"react\";\r\nimport GlobalStyles from \"./GlobalStyles\";\r\nimport Router from \"./Router\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router />\r\n        <GlobalStyles />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}